---------------------------------
How to use the `matrix_divided` fn
----------------------------------

This function divides all elements of a matrix by a given number

The result is rounded to 2dp ,  a new list is returned

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [["m", 1, 2], [2, 3, 5]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 3], [1, 3, 5]]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> print(matrix_divided(matrix, "j"))
Traceback (most recent call last):
TypeError: div must be a number

>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> print(matrix_divided(matrix))
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix = [[1, 2] , [2, 4]]
>>> print(matrix_divided(matrix, 2))
[[0.5, 1.0], [1.0, 2.0]]

>>> print(matrix_divided(matrix, "kjs"))
Traceback (most recent call last):
TypeError: div must be a number

>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix = [["perl", "go", "c++"], ["c", "js", "python"]]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2], [3, 4, 5]]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
>>> print(matrix_divided(matrix, float('inf')))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix = [[2, float('inf'), 4], [5, 7, 9]]
>>> print(matrix_divided(matrix, 2))
[[1.0, inf, 2.0], [2.5, 3.5, 4.5]]

>>> matrix = [[2, float('NaN'), 4], [5, 7, 9]]
>>> print(matrix_divided(matrix, float('NaN')))
[[nan, nan, nan], [nan, nan, nan]]

>>> print(matrix_divided())
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
