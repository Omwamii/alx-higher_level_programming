------------------------------------------------------------
How to use 'integer_validator' method for BaseGeometry class
------------------------------------------------------------

------------------------------------------------------------

case 0: import 

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

-------------------------------------------------------------

case 1: value is not an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", "21")
Traceback (most recent call last):
TypeError: my_int must be an integer

--------------------------------------------------------------

case 2: value is less than 0

>>> bg.integer_validator("h", -2)
Traceback (most recent call last):
ValueError: h must be greater than 0

---------------------------------------------------------------

case 3: no first parameter passed 

>>> bg.integer_validator(2)
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'


----------------------------------------------------------------

case 4: no second parameter

>>> bg.integer_validator("width")
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

-----------------------------------------------------------------

case 5: pass int as first parameter

>>> bg.integer_validator(12, 12)
>>>

------------------------------------------------------------------

case 6: no parameter passed

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

-------------------------------------------------------------------

case 7: normal case

>>> bg.integer_validator("height", 10)
>>>

--------------------------------------------------------------------
