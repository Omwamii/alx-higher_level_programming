-------------------------
How to use 'print_sorted'
-------------------------

print_sorted(self)

-------------------------------------------
 ** import **
>>> MyList = __import__('1-my_list').MyList

-------------------------------------------

case 1: normal case

>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)

>>> my_list.print_sorted()
[1, 2, 3, 4, 5]

--------------------------------------------

case 2: empty list

>>> new = MyList()

>>> new.print_sorted()
[]

--------------------------------------------

case 3: list with None

>>> new.append(None)
>>> new.append(None)
>>> new.print_sorted()
Traceback (most recent call last):
TypeError: '<' not supported between instances of 'NoneType' and 'NoneType'

----------------------------------------------

case 4: List with strings only

>>> mix = MyList()
>>> mix.append("js")
>>> mix.append("cpp")
>>> mix.append("c")
>>> mix.print_sorted()
['c', 'cpp', 'js']

-----------------------------------------------

case 5: List with strings and integers

>>> mix = MyList()
>>> mix.append("ok")
>>> mix.append(1)
>>> mix.append(None)
>>> mix.print_sorted()
Traceback (most recent call last):
TypeError: '<' not supported between instances of 'int' and 'str'

-------------------------------------------------

case 6: undefined object

>>> my_list2.print_sorted()
Traceback (most recent call last):
NameError: name 'my_list2' is not defined

---------------------------------------------------

case 7: list passed directly to class

>>> lst = [3, 6, 1]
>>> my_list = MyList(lst)
>>> my_list.print_sorted()
[1, 3, 6]

----------------------------------------------------

case 8: single number

>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.print_sorted()
[1]

------------------------------------------------------

case 9: list used as object instead

>>> my_list = [2, 0, 4]
>>> my_list.print_sorted()
Traceback (most recent call last):
AttributeError: 'list' object has no attribute 'print_sorted'

---------------------------------------------------------

case 10: List has negative and positive numbers

>>> my_list = MyList()
>>> my_list.append(6)
>>> my_list.append(-1)
>>> my_list.append(-5)
>>> my_list.append(10)
>>> my_list.print_sorted()
[-5, -1, 6, 10]
